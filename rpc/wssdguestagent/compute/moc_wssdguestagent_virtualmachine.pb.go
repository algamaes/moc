// Code generated by protoc-gen-go. DO NOT EDIT.
// source: virtualmachine/moc_wssdguestagent_virtualmachine.proto

package compute

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	common "github.com/microsoft/moc/rpc/common"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VirtualMachineRunCommandRequest struct {
	Source                    *common.VirtualMachineRunCommandScriptSource     `protobuf:"bytes,1,opt,name=Source,proto3" json:"Source,omitempty"`
	RunCommandInputParameters []*common.VirtualMachineRunCommandInputParameter `protobuf:"bytes,2,rep,name=RunCommandInputParameters,proto3" json:"RunCommandInputParameters,omitempty"`
	RunAsUser                 string                                           `protobuf:"bytes,3,opt,name=RunAsUser,proto3" json:"RunAsUser,omitempty"`
	RunAsPassword             string                                           `protobuf:"bytes,4,opt,name=RunAsPassword,proto3" json:"RunAsPassword,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}                                         `json:"-"`
	XXX_unrecognized          []byte                                           `json:"-"`
	XXX_sizecache             int32                                            `json:"-"`
}

func (m *VirtualMachineRunCommandRequest) Reset()         { *m = VirtualMachineRunCommandRequest{} }
func (m *VirtualMachineRunCommandRequest) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineRunCommandRequest) ProtoMessage()    {}
func (*VirtualMachineRunCommandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49a2a8a1106c8643, []int{0}
}

func (m *VirtualMachineRunCommandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineRunCommandRequest.Unmarshal(m, b)
}
func (m *VirtualMachineRunCommandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineRunCommandRequest.Marshal(b, m, deterministic)
}
func (m *VirtualMachineRunCommandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineRunCommandRequest.Merge(m, src)
}
func (m *VirtualMachineRunCommandRequest) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineRunCommandRequest.Size(m)
}
func (m *VirtualMachineRunCommandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineRunCommandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineRunCommandRequest proto.InternalMessageInfo

func (m *VirtualMachineRunCommandRequest) GetSource() *common.VirtualMachineRunCommandScriptSource {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *VirtualMachineRunCommandRequest) GetRunCommandInputParameters() []*common.VirtualMachineRunCommandInputParameter {
	if m != nil {
		return m.RunCommandInputParameters
	}
	return nil
}

func (m *VirtualMachineRunCommandRequest) GetRunAsUser() string {
	if m != nil {
		return m.RunAsUser
	}
	return ""
}

func (m *VirtualMachineRunCommandRequest) GetRunAsPassword() string {
	if m != nil {
		return m.RunAsPassword
	}
	return ""
}

type VirtualMachineCommandResultRequest struct {
	OperationID          string   `protobuf:"bytes,1,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualMachineCommandResultRequest) Reset()         { *m = VirtualMachineCommandResultRequest{} }
func (m *VirtualMachineCommandResultRequest) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineCommandResultRequest) ProtoMessage()    {}
func (*VirtualMachineCommandResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_49a2a8a1106c8643, []int{1}
}

func (m *VirtualMachineCommandResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineCommandResultRequest.Unmarshal(m, b)
}
func (m *VirtualMachineCommandResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineCommandResultRequest.Marshal(b, m, deterministic)
}
func (m *VirtualMachineCommandResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineCommandResultRequest.Merge(m, src)
}
func (m *VirtualMachineCommandResultRequest) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineCommandResultRequest.Size(m)
}
func (m *VirtualMachineCommandResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineCommandResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineCommandResultRequest proto.InternalMessageInfo

func (m *VirtualMachineCommandResultRequest) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

type VirtualMachineRunCommandResponse struct {
	InstanceView         *common.VirtualMachineRunCommandInstanceView `protobuf:"bytes,1,opt,name=InstanceView,proto3" json:"InstanceView,omitempty"`
	OperationID          string                                       `protobuf:"bytes,2,opt,name=OperationID,proto3" json:"OperationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *VirtualMachineRunCommandResponse) Reset()         { *m = VirtualMachineRunCommandResponse{} }
func (m *VirtualMachineRunCommandResponse) String() string { return proto.CompactTextString(m) }
func (*VirtualMachineRunCommandResponse) ProtoMessage()    {}
func (*VirtualMachineRunCommandResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49a2a8a1106c8643, []int{2}
}

func (m *VirtualMachineRunCommandResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualMachineRunCommandResponse.Unmarshal(m, b)
}
func (m *VirtualMachineRunCommandResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualMachineRunCommandResponse.Marshal(b, m, deterministic)
}
func (m *VirtualMachineRunCommandResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualMachineRunCommandResponse.Merge(m, src)
}
func (m *VirtualMachineRunCommandResponse) XXX_Size() int {
	return xxx_messageInfo_VirtualMachineRunCommandResponse.Size(m)
}
func (m *VirtualMachineRunCommandResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualMachineRunCommandResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualMachineRunCommandResponse proto.InternalMessageInfo

func (m *VirtualMachineRunCommandResponse) GetInstanceView() *common.VirtualMachineRunCommandInstanceView {
	if m != nil {
		return m.InstanceView
	}
	return nil
}

func (m *VirtualMachineRunCommandResponse) GetOperationID() string {
	if m != nil {
		return m.OperationID
	}
	return ""
}

func init() {
	proto.RegisterType((*VirtualMachineRunCommandRequest)(nil), "moc.wssdguestagent.compute.VirtualMachineRunCommandRequest")
	proto.RegisterType((*VirtualMachineCommandResultRequest)(nil), "moc.wssdguestagent.compute.VirtualMachineCommandResultRequest")
	proto.RegisterType((*VirtualMachineRunCommandResponse)(nil), "moc.wssdguestagent.compute.VirtualMachineRunCommandResponse")
}

func init() {
	proto.RegisterFile("virtualmachine/moc_wssdguestagent_virtualmachine.proto", fileDescriptor_49a2a8a1106c8643)
}

var fileDescriptor_49a2a8a1106c8643 = []byte{
	// 470 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x8e, 0xd3, 0x30,
	0x18, 0x24, 0xed, 0x6a, 0xa5, 0xba, 0x20, 0x81, 0x91, 0x20, 0x1b, 0x04, 0x44, 0x39, 0x15, 0x90,
	0x1c, 0xa9, 0x2b, 0xb8, 0x80, 0x90, 0xba, 0xcb, 0x5f, 0x0f, 0x0b, 0xab, 0xac, 0xd8, 0x03, 0x97,
	0x95, 0xeb, 0x7e, 0x4d, 0x2d, 0x6a, 0x3b, 0xf8, 0x87, 0x8a, 0x1b, 0x47, 0xb8, 0xc2, 0x03, 0xf0,
	0x14, 0xbc, 0x1f, 0x4a, 0xd2, 0x6e, 0x63, 0x20, 0x50, 0xc1, 0xa9, 0xaa, 0xbf, 0x99, 0xc9, 0x78,
	0xbe, 0x49, 0xd0, 0x83, 0xf7, 0x5c, 0x5b, 0x47, 0x17, 0x82, 0xb2, 0x39, 0x97, 0x90, 0x0a, 0xc5,
	0xce, 0x96, 0xc6, 0x4c, 0x73, 0x07, 0xc6, 0xd2, 0x1c, 0xa4, 0x3d, 0xf3, 0x11, 0xa4, 0xd0, 0xca,
	0x2a, 0x1c, 0x09, 0xc5, 0x88, 0x0f, 0x24, 0x4c, 0x89, 0xc2, 0x59, 0x88, 0x6e, 0xe4, 0x4a, 0xe5,
	0x0b, 0x48, 0x2b, 0xe4, 0xc4, 0xcd, 0x52, 0x10, 0x85, 0xfd, 0x50, 0x13, 0xa3, 0xeb, 0xe5, 0x13,
	0x98, 0x12, 0x42, 0xc9, 0xd5, 0xcf, 0x6a, 0x70, 0xcb, 0x1f, 0x94, 0x4a, 0xde, 0xfc, 0x66, 0x63,
	0x2e, 0x95, 0xe5, 0x33, 0xce, 0xa8, 0xe5, 0xeb, 0x71, 0xf2, 0xad, 0x83, 0x6e, 0x9f, 0xd6, 0x4e,
	0x8f, 0x6a, 0xa7, 0x99, 0x93, 0x87, 0x4a, 0x08, 0x2a, 0xa7, 0x19, 0xbc, 0x2b, 0x5d, 0xe2, 0x11,
	0xda, 0x3d, 0x51, 0x4e, 0x33, 0x08, 0x83, 0x38, 0x18, 0xf4, 0x87, 0x77, 0x48, 0x79, 0x8b, 0x36,
	0xd6, 0x09, 0xd3, 0xbc, 0xb0, 0x35, 0x21, 0x5b, 0x11, 0x31, 0x47, 0x7b, 0x1b, 0xc4, 0x58, 0x16,
	0xce, 0x1e, 0x53, 0x4d, 0x05, 0x58, 0xd0, 0x26, 0xec, 0xc4, 0xdd, 0x41, 0x7f, 0x78, 0xef, 0x8f,
	0xaa, 0x3e, 0x27, 0x6b, 0x57, 0xc3, 0x09, 0xea, 0x65, 0x4e, 0x8e, 0xcc, 0x6b, 0x03, 0x3a, 0xec,
	0xc6, 0xc1, 0xa0, 0x77, 0xb0, 0xf3, 0xe9, 0x7b, 0x18, 0x64, 0x9b, 0x63, 0x7c, 0x17, 0x5d, 0xaa,
	0xfe, 0x1c, 0x53, 0x63, 0x96, 0x4a, 0x4f, 0xc3, 0x9d, 0x06, 0xce, 0x1f, 0x25, 0xcf, 0x50, 0xe2,
	0x9b, 0x3a, 0x4f, 0xc7, 0xb8, 0x85, 0x5d, 0x67, 0x14, 0xa3, 0xfe, 0xab, 0x02, 0x74, 0x15, 0xed,
	0xf8, 0x49, 0x15, 0x54, 0x2f, 0x6b, 0x1e, 0x25, 0x5f, 0x03, 0x14, 0xb7, 0x27, 0x6d, 0x0a, 0x25,
	0x0d, 0xe0, 0x23, 0x74, 0x71, 0x2c, 0x8d, 0xa5, 0x92, 0xc1, 0x29, 0x87, 0xe5, 0x56, 0x81, 0x37,
	0x09, 0x99, 0x47, 0xff, 0xd9, 0x55, 0xe7, 0x17, 0x57, 0xc3, 0x8f, 0x5d, 0x74, 0xd5, 0x17, 0x1e,
	0x95, 0xa5, 0xc4, 0x2f, 0xd0, 0x95, 0xc3, 0x39, 0xb0, 0xb7, 0x2f, 0x1b, 0x95, 0xc1, 0xd7, 0x48,
	0x5d, 0x51, 0xb2, 0xae, 0x28, 0x79, 0x5a, 0x56, 0x34, 0xda, 0xab, 0xfc, 0x35, 0xa1, 0xeb, 0x0b,
	0x25, 0x17, 0xf0, 0xe7, 0x00, 0xa1, 0x8d, 0x59, 0xfc, 0x90, 0xb4, 0xbf, 0x02, 0xe4, 0x2f, 0x4d,
	0x8c, 0x1e, 0xfd, 0x1b, 0xf9, 0xdc, 0xcb, 0x97, 0x00, 0x5d, 0x7e, 0x0e, 0xd6, 0xdb, 0x20, 0x7e,
	0xbc, 0xbd, 0xe8, 0xef, 0x56, 0xff, 0xbf, 0xa6, 0x0e, 0xee, 0xbf, 0xd9, 0xcf, 0xb9, 0x9d, 0xbb,
	0x49, 0x49, 0x4a, 0x05, 0x67, 0x5a, 0x19, 0x35, 0xb3, 0xe5, 0x37, 0x25, 0xd5, 0x05, 0x4b, 0x7d,
	0xe5, 0x74, 0xa5, 0x3c, 0xd9, 0xad, 0x96, 0xb0, 0xff, 0x23, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x85,
	0xbd, 0x9c, 0x8b, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VirtualMachineAgentClient is the client API for VirtualMachineAgent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VirtualMachineAgentClient interface {
	CheckNotification(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.NotificationResponse, error)
	RunCommand(ctx context.Context, in *VirtualMachineRunCommandRequest, opts ...grpc.CallOption) (*VirtualMachineRunCommandResponse, error)
	GetCommandResult(ctx context.Context, in *VirtualMachineCommandResultRequest, opts ...grpc.CallOption) (*VirtualMachineRunCommandResponse, error)
}

type virtualMachineAgentClient struct {
	cc *grpc.ClientConn
}

func NewVirtualMachineAgentClient(cc *grpc.ClientConn) VirtualMachineAgentClient {
	return &virtualMachineAgentClient{cc}
}

func (c *virtualMachineAgentClient) CheckNotification(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*common.NotificationResponse, error) {
	out := new(common.NotificationResponse)
	err := c.cc.Invoke(ctx, "/moc.wssdguestagent.compute.VirtualMachineAgent/CheckNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineAgentClient) RunCommand(ctx context.Context, in *VirtualMachineRunCommandRequest, opts ...grpc.CallOption) (*VirtualMachineRunCommandResponse, error) {
	out := new(VirtualMachineRunCommandResponse)
	err := c.cc.Invoke(ctx, "/moc.wssdguestagent.compute.VirtualMachineAgent/RunCommand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *virtualMachineAgentClient) GetCommandResult(ctx context.Context, in *VirtualMachineCommandResultRequest, opts ...grpc.CallOption) (*VirtualMachineRunCommandResponse, error) {
	out := new(VirtualMachineRunCommandResponse)
	err := c.cc.Invoke(ctx, "/moc.wssdguestagent.compute.VirtualMachineAgent/GetCommandResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VirtualMachineAgentServer is the server API for VirtualMachineAgent service.
type VirtualMachineAgentServer interface {
	CheckNotification(context.Context, *empty.Empty) (*common.NotificationResponse, error)
	RunCommand(context.Context, *VirtualMachineRunCommandRequest) (*VirtualMachineRunCommandResponse, error)
	GetCommandResult(context.Context, *VirtualMachineCommandResultRequest) (*VirtualMachineRunCommandResponse, error)
}

// UnimplementedVirtualMachineAgentServer can be embedded to have forward compatible implementations.
type UnimplementedVirtualMachineAgentServer struct {
}

func (*UnimplementedVirtualMachineAgentServer) CheckNotification(ctx context.Context, req *empty.Empty) (*common.NotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckNotification not implemented")
}
func (*UnimplementedVirtualMachineAgentServer) RunCommand(ctx context.Context, req *VirtualMachineRunCommandRequest) (*VirtualMachineRunCommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunCommand not implemented")
}
func (*UnimplementedVirtualMachineAgentServer) GetCommandResult(ctx context.Context, req *VirtualMachineCommandResultRequest) (*VirtualMachineRunCommandResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCommandResult not implemented")
}

func RegisterVirtualMachineAgentServer(s *grpc.Server, srv VirtualMachineAgentServer) {
	s.RegisterService(&_VirtualMachineAgent_serviceDesc, srv)
}

func _VirtualMachineAgent_CheckNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineAgentServer).CheckNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.wssdguestagent.compute.VirtualMachineAgent/CheckNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineAgentServer).CheckNotification(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineAgent_RunCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualMachineRunCommandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineAgentServer).RunCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.wssdguestagent.compute.VirtualMachineAgent/RunCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineAgentServer).RunCommand(ctx, req.(*VirtualMachineRunCommandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VirtualMachineAgent_GetCommandResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualMachineCommandResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VirtualMachineAgentServer).GetCommandResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/moc.wssdguestagent.compute.VirtualMachineAgent/GetCommandResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VirtualMachineAgentServer).GetCommandResult(ctx, req.(*VirtualMachineCommandResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VirtualMachineAgent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "moc.wssdguestagent.compute.VirtualMachineAgent",
	HandlerType: (*VirtualMachineAgentServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckNotification",
			Handler:    _VirtualMachineAgent_CheckNotification_Handler,
		},
		{
			MethodName: "RunCommand",
			Handler:    _VirtualMachineAgent_RunCommand_Handler,
		},
		{
			MethodName: "GetCommandResult",
			Handler:    _VirtualMachineAgent_GetCommandResult_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "virtualmachine/moc_wssdguestagent_virtualmachine.proto",
}
